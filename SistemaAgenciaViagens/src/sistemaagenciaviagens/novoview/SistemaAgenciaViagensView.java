/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemaagenciaviagens.novoview;

import java.util.ArrayList;
import sistemaagenciaviagens.dao.BancoDeDados;
import sistemaagenciaviagens.model.ClienteModel;
import sistemaagenciaviagens.model.FuncionarioModel;
import sistemaagenciaviagens.model.HotelModel;
import sistemaagenciaviagens.model.LocalModel;
import sistemaagenciaviagens.model.PlanoModel;
import sistemaagenciaviagens.model.TransporteModel;
import sistemaagenciaviagens.uteis.ManipulaDB;

/**
 *
 * @author Caio
 */
public class SistemaAgenciaViagensView extends javax.swing.JFrame {

    /**
     * Creates new form SistemaAgenciaViagensView3
     */
    public SistemaAgenciaViagensView() {
        recuperarTabelas();
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Sistema de Agencia de Viagens");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        jMenu1.setText("Menu");

        jMenuItem2.setText("Funcionario");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Local");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Hotel");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Transporte");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Plano de Viagem");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setText("Cliente");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sair");

        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        FuncionarioView fun = new FuncionarioView();
        fun.setVisible(true);

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        LocalView lcl = new LocalView();
        lcl.setVisible(true);

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

        HotelView htl = new HotelView();
        htl.setVisible(true);

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed

        TransporteView trp = new TransporteView();
        trp.setVisible(true);

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

        PlanoView pln = new PlanoView();
        pln.setVisible(true);

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed

        ClienteView cli = new ClienteView();
        cli.setVisible(true);

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        //this.dispose();

        salvarTabelas();
        System.exit(0);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SistemaAgenciaViagensView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SistemaAgenciaViagensView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SistemaAgenciaViagensView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaAgenciaViagensView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SistemaAgenciaViagensView().setVisible(true);
            }
        });
    }
    
    public static void salvarTabelas(){
        ArrayList<Object> tabelaLcl = new ArrayList<>();
        ArrayList<Object> tabelaF = new ArrayList<>();
        ArrayList<Object> tabelaCli = new ArrayList<>();
        ArrayList<Object> tabelaHtl = new ArrayList<>();
        ArrayList<Object> tabelaTpt = new ArrayList<>();
        ArrayList<Object> tabelaPln = new ArrayList<>();
        
        for(Object local : BancoDeDados.getTabelaLocal()){
            tabelaLcl.add(local);
        }
        
        for (Object funcionario : BancoDeDados.getTabelaFuncionario()) {
            tabelaF.add(funcionario);
        }
        
        for (Object cliente : BancoDeDados.getTabelaCliente()) {
            tabelaCli.add(cliente);
        }
        
        for (Object hotel : BancoDeDados.getHotelTable()) {
            tabelaHtl.add(hotel);
        }
        
        for (Object transporte : BancoDeDados.getTransporteTable()) {
            tabelaTpt.add(transporte);
        }
        
        for (Object plano : BancoDeDados.getPlanoTable()) {
            tabelaPln.add(plano);
        }
        
        try {
            ManipulaDB.salvarArquivo(tabelaLcl, "banco/local.dat");
            
            ManipulaDB.salvarArquivo(tabelaF, "banco/funcionario.dat");
            
            ManipulaDB.salvarArquivo(tabelaCli, "banco/cliente.dat");
            
            ManipulaDB.salvarArquivo(tabelaHtl, "banco/hotel.dat");
            
            ManipulaDB.salvarArquivo(tabelaTpt, "banco/transporte.dat");
            
            ManipulaDB.salvarArquivo(tabelaPln, "banco/plano.dat");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println(e.getMessage());
        }
    }
    
    public static void recuperarTabelas(){
        System.out.println("Conectando ao Banco de Dados");
        
        try {
            ArrayList tabelaL = ManipulaDB.recuperarArquivo("banco/local.dat");
            ArrayList tabelaF = ManipulaDB.recuperarArquivo("banco/funcionario.dat");
            ArrayList tabelaC = ManipulaDB.recuperarArquivo("banco/cliente.dat");
            ArrayList tabelaH = ManipulaDB.recuperarArquivo("banco/hotel.dat");
            ArrayList tabelaT = ManipulaDB.recuperarArquivo("banco/transporte.dat");
            ArrayList tabelaP = ManipulaDB.recuperarArquivo("banco/plano.dat");
            
            // Local
            
            if(tabelaL != null){
                ArrayList<LocalModel> tLocal = new ArrayList<LocalModel>();
                
                for (Object o : tabelaL) {
                    LocalModel lcl = (LocalModel) o;
                    
                    tLocal.add(lcl);
                }
                
                /* Atualiza o codigo conforme recupera os dados para que nao
                   haja problema na geracao de novos codigos e eles nao se repitam */
                if((tLocal.size()) > 0){
                    BancoDeDados.setProximoCodigoLocal(tLocal.get(tLocal.size()-1).getCodigo() + 1);
                }
                else{
                    BancoDeDados.setProximoCodigoLocal(BancoDeDados.getProximoCodigoLocal());
                }
                
                BancoDeDados.setTabelaLocal(tLocal);
            }
            
            // Funcionario
            
            if(tabelaF != null){
                ArrayList<FuncionarioModel> tFuncionario = new ArrayList<FuncionarioModel>();
                
                for (Object o : tabelaF) {
                    FuncionarioModel f = (FuncionarioModel) o;
                    
                    tFuncionario.add(f);
                }
                
                /* Atualiza o codigo conforme recupera os dados para que nao
                   haja problema na geracao de novos codigos e eles nao se repitam */
                if((tFuncionario.size()) > 0){
                    BancoDeDados.setProximoCodigoFuncionario(tFuncionario.get(tFuncionario.size()-1).getCodigo() + 1);
                }
                else{
                    BancoDeDados.setProximoCodigoFuncionario(BancoDeDados.getProximoCodigoFuncionario());
                }
                
                BancoDeDados.setTabelaFuncionario(tFuncionario);
            }
            
            // Cliente
            
            if(tabelaC != null){
                ArrayList<ClienteModel> tCliente = new ArrayList<ClienteModel>();
                
                for (Object o : tabelaC) {
                    ClienteModel c = (ClienteModel) o;
                    
                    tCliente.add(c);
                }
                
                /* Atualiza o codigo conforme recupera os dados para que nao
                   haja problema na geracao de novos codigos e eles nao se repitam */
                if((tCliente.size()) > 0){
                    BancoDeDados.setProximoCodigoCliente(tCliente.get(tCliente.size()-1).getCodigo() + 1);
                }
                else{
                    BancoDeDados.setProximoCodigoCliente(BancoDeDados.getProximoCodigoCliente());
                }
                
                BancoDeDados.setTabelaCliente(tCliente);
            }
            
            // Hotel
            
            if(tabelaH != null){
                ArrayList<HotelModel> tHotel = new ArrayList<HotelModel>();
                
                for (Object o : tabelaH) {
                    HotelModel h = (HotelModel) o;
                    
                    tHotel.add(h);
                }
                
                /* Atualiza o codigo conforme recupera os dados para que nao
                   haja problema na geracao de novos codigos e eles nao se repitam */
                if((tHotel.size()) > 0){
                    BancoDeDados.setProximoCodigoHotel(tHotel.get(tHotel.size()-1).getCodigo() + 1);
                }
                else{
                    BancoDeDados.setProximoCodigoHotel(BancoDeDados.getProximoCodigoHotel());
                }
                
                BancoDeDados.setHotelTable(tHotel);
            }
            
            // Transporte
            
            if(tabelaT != null){
                ArrayList<TransporteModel> tTransporte = new ArrayList<TransporteModel>();
                
                for (Object o : tabelaT) {
                    TransporteModel t = (TransporteModel) o;
                    
                    tTransporte.add(t);
                }
                
                /* Atualiza o codigo conforme recupera os dados para que nao
                   haja problema na geracao de novos codigos e eles nao se repitam */
                if((tTransporte.size()) > 0){
                    BancoDeDados.setProximoCodigoTransporte(tTransporte.get(tTransporte.size()-1).getCodigo() + 1);
                }
                else{
                    BancoDeDados.setProximoCodigoTransporte(BancoDeDados.getProximoCodigoTransporte());
                }
                
                BancoDeDados.setTransporteTable(tTransporte);
            }
            
            // Plano
            
            if(tabelaP != null){
                ArrayList<PlanoModel> tPlano = new ArrayList<PlanoModel>();
                
                for (Object o : tabelaP) {
                    PlanoModel p = (PlanoModel) o;
                    
                    tPlano.add(p);
                }
                
                /* Atualiza o codigo conforme recupera os dados para que nao
                   haja problema na geracao de novos codigos e eles nao se repitam */
                if((tPlano.size()) > 0){
                    BancoDeDados.setProximoCodigoPlano(tPlano.get(tPlano.size()-1).getCodigo() + 1);
                }
                else{
                    BancoDeDados.setProximoCodigoPlano(BancoDeDados.getProximoCodigoPlano());
                }
                
                BancoDeDados.setPlanoTable(tPlano);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
